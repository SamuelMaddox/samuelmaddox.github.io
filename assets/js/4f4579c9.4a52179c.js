"use strict";(self.webpackChunkdeveloper_notes=self.webpackChunkdeveloper_notes||[]).push([[416],{273:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>c,metadata:()=>n,toc:()=>h});const n=JSON.parse('{"id":"dev-notes/library-tools/tailwind-css/library-setup","title":"Library Setup","description":"Installation","source":"@site/docs/dev-notes/04-library-tools/05-tailwind-css/01-library-setup.mdx","sourceDirName":"dev-notes/04-library-tools/05-tailwind-css","slug":"/dev-notes/library-tools/tailwind-css/library-setup","permalink":"/dev-notes/library-tools/tailwind-css/library-setup","draft":false,"unlisted":false,"editUrl":"https://github.com/samuelmaddox/samuelmaddox/blob/main/docs/dev-notes/04-library-tools/05-tailwind-css/01-library-setup.mdx","tags":[],"version":"current","lastUpdatedAt":1749129615000,"sidebarPosition":1,"frontMatter":{"title":"Library Setup"},"sidebar":"devNotesSidebar","previous":{"title":"\ud83d\udea7 Playwright","permalink":"/dev-notes/library-tools/playwright"},"next":{"title":"Theme Configuration","permalink":"/dev-notes/library-tools/tailwind-css/theme-configuration"}}');var s=t(3420),o=t(3774),l=t(4646);const a='# Tailwind CSS\n\n[Tailwind CSS](https://tailwindcss.com/) is a utility-first CSS framework packed with classes like flex, pt-4, text-center and rotate-90 that can be composed to build any design, directly in your markup.\n\n:::tip\nVerify that designs utilize Tailwind defaults; except for where this application has overwritten or extended Tailwind\'s preflight or theme defaults. Custom spacing, sizing, colors, typography, etc, should rarely be needed\nUseful Links:\n\n- [https://tailwindcss.com/docs/preflight](https://tailwindcss.com/docs/preflight)\n- [https://tailwindcss.com/docs/preflight#extending-preflight](https://tailwindcss.com/docs/preflight#extending-preflight)\n- [https://tailwindcss.com/docs/theme](https://tailwindcss.com/docs/theme)\n- [https://tailwindcss.com/docs/theme#customizing-your-theme](https://tailwindcss.com/docs/theme#customizing-your-theme)\n- [https://tailwindcss.com/docs/adding-custom-styles](https://tailwindcss.com/docs/adding-custom-styles)\n\n:::\n\n## clsx() Utility\n\n:::info\nSource: [clsx() Tailwind Support](https://github.com/lukeed/clsx?tab=readme-ov-file#tailwind-support)\n:::\n\nThe [`clsx()`](https://github.com/lukeed/clsx) utility is useful for constructing `className` strings conditionally. You may find the `clsx/lite` module useful within Tailwind contexts. This is especially true if/when your application only composes classes in this pattern:\n\n```ts\nimport clsx from "clsx/lite";\n\nclsx("text-base", props.active && "text-primary", props.className);\n```\n\nThe [Tailwind CSS IntelliSense VS Code Extension](https://marketplace.visualstudio.com/items?itemName=bradlc.vscode-tailwindcss) requires the following setting to be configured in VS Code `settings.json` in order for class autocompletion to continue working when using `clsx()`\n\n```json\n{\n  "tailwindCSS.experimental.classRegex": [\n    ["clsx\\\\(([^)]*)\\\\)", "(?:\'|\\"|`)([^\']*)(?:\'|\\"|`)"]\n  ]\n}\n```\n\nThis setting has been added to the shared workspace settings file: `.vscode/settings.json`\n\n## Official Prettier Plugin\n\n[`prettier-plugin-tailwindcss`](https://www.npmjs.com/package/prettier-plugin-tailwindcss) automatically sorts classes based on their [recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted). Refer to plugin\'s documentation if it doesn\'t work for classes in function calls or template literals, or if it does something that the team finds annoying.\n\n## \ud83d\udea7 Unofficial ESLint Plugin\n\n:::warning\nAs of 04/08/2025\n\n- There is no official ESLint plugin released for Tailwind CSS.\n- There is the unofficial but decently popular [`eslint-plugin-tailwindcss`](https://www.npmjs.com/package/eslint-plugin-tailwindcss). However it is NOT YET compatible with Tailwind v4.0\n- `@eslint/css` has a language option for custom TailwindCSS syntax. However, it has not been updated for TailwindCSS 4.0. That section of the config might need to be commented out until the language option has been updated\n\n:::\n\n\ud83d\udea7 TODO: More comments may be useful here if/when this plugin works for Tailwind v4.0. Or maybe this section isn\'t needed.\n\n## Using Color Utilities\n\n:::info\nSource: [https://tailwindcss.com/docs/colors#using-color-utilities](https://tailwindcss.com/docs/colors#using-color-utilities)\n:::\n\nUse color utilities like `bg-white`, `border-pink-300`, and `text-gray-950` to set the different color properties of elements in your design:\n\n| Utility         | Description                                                                                                   |\n| --------------- | ------------------------------------------------------------------------------------------------------------- |\n| bg-\\*           | Sets the [background color](https://tailwindcss.com/docs/background-color) of an element                      |\n| text-\\*         | Sets the [text color](https://tailwindcss.com/docs/text-color) of an element                                  |\n| decoration-\\*   | Sets the [text decoration color](https://tailwindcss.com/docs/text-decoration-color) of an element            |\n| border-\\*       | Sets the [border color](https://tailwindcss.com/docs/border-color) of an element                              |\n| outline-\\*      | Sets the [outline color](https://tailwindcss.com/docs/outline-color) of an element                            |\n| shadow-\\*       | Sets the color of [box shadows](https://tailwindcss.com/docs/box-shadow#setting-the-shadow-color)             |\n| inset-shadow-\\* | Sets the color of [inset box shadows](https://tailwindcss.com/docs/box-shadow#setting-the-inset-shadow-color) |\n| ring-\\*         | Sets the color of [ring shadows](https://tailwindcss.com/docs/box-shadow#setting-the-ring-color)              |\n| inset-ring-\\*   | Sets the color of [inset ring shadows](https://tailwindcss.com/docs/box-shadow#setting-the-inset-ring-color)  |\n| accent-\\*       | Sets the [accent color](https://tailwindcss.com/docs/accent-color) of form controls                           |\n| caret-\\*        | Sets the [caret color](https://tailwindcss.com/docs/caret-color) in form controls                             |\n| fill-\\*         | Sets the [fill color](https://tailwindcss.com/docs/fill) of SVG elements                                      |\n| stroke-\\*       | Sets the [stroke color](https://tailwindcss.com/docs/stroke) of SVG elements                                  |\n\n## Using Theme Variables\n\n:::info\nSource: [https://tailwindcss.com/docs/theme#theme-variable-namespaces](https://tailwindcss.com/docs/theme#theme-variable-namespaces)\n:::\n\nTheme variables are defined in namespaces and each namespace corresponds to one or more utility class or variant APIs.\n\n| Namespace         | Utility classes                                                       |\n| ----------------- | --------------------------------------------------------------------- |\n| --color-\\*        | Color utilities like bg-red-500, text-sky-300, and many more          |\n| --font-\\*         | Font family utilities like font-sans                                  |\n| --text-\\*         | Font size utilities like text-xl                                      |\n| --font-weight-\\*  | Font weight utilities like font-bold                                  |\n| --tracking-\\*     | Letter spacing utilities like tracking-wide                           |\n| --leading-\\*      | Line height utilities like leading-tight                              |\n| --breakpoint-\\*   | Responsive breakpoint variants like sm:\\*                             |\n| --container-\\*    | Container query variants like @sm:\\* and size utilities like max-w-md |\n| --spacing-\\*      | Spacing and sizing utilities like px-4, max-h-16, and many more       |\n| --radius-\\*       | Border radius utilities like rounded-sm                               |\n| --shadow-\\*       | Box shadow utilities like shadow-md                                   |\n| --inset-shadow-\\* | Inset box shadow utilities like inset-shadow-xs                       |\n| --drop-shadow-\\*  | Drop shadow filter utilities like drop-shadow-md                      |\n| --blur-\\*         | Blur filter utilities like blur-md                                    |\n| --perspective-\\*  | Perspective utilities like perspective-near                           |\n| --aspect-\\*       | Aspect ratio utilities like aspect-video                              |\n| --ease-\\*         | Transition timing function utilities like ease-out                    |\n| --animate-\\*      | Animation utilities like animate-spin                                 |\n',c={title:"Library Setup"},r="Tailwind CSS",d={},h=[{value:"Installation",id:"installation",level:2},{value:"VS Code Extension",id:"vs-code-extension",level:2},{value:"clsx() Utility",id:"clsx-utility",level:2},{value:"Official Prettier Plugin",id:"official-prettier-plugin",level:2},{value:"Unofficial ESLint Plugin",id:"unofficial-eslint-plugin",level:2},{value:"Project Documentation",id:"project-documentation",level:2},{value:"Update <code>98-vs-code/02-vs-code-extensions.md</code> Documentation",id:"update-98-vs-code02-vs-code-extensionsmd-documentation",level:3},{value:"Create <code>03-libraries-tools/01-tailwind-css.md</code> Documentation",id:"create-03-libraries-tools01-tailwind-cssmd-documentation",level:3},{value:"Create <code>03-libraries-tools/02-theme-configuration.mdx</code>",id:"create-03-libraries-tools02-theme-configurationmdx",level:3},{value:"Create <code>99-articles/mastering-design-system-colors</code> Article",id:"create-99-articlesmastering-design-system-colors-article",level:3}];function m(e){const i={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"tailwind-css",children:"Tailwind CSS"})}),"\n",(0,s.jsx)(i.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsxs)(i.p,{children:["Follow the ",(0,s.jsx)(i.a,{href:"https://tailwindcss.com/docs/installation/framework-guides",children:"Tailwind CSS installation instructions"})," for your chosen framework or build system"]}),"\n",(0,s.jsx)(i.h2,{id:"vs-code-extension",children:"VS Code Extension"}),"\n",(0,s.jsxs)(i.p,{children:["Add the following to the ",(0,s.jsx)(i.code,{children:".vscode/extensions.json"})," file."]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-json",children:'{\n  "recommendations": [\n    . . .\n    "bradlc.vscode-tailwindcss"\n  ]\n}\n'})}),"\n",(0,s.jsx)(i.h2,{id:"clsx-utility",children:"clsx() Utility"}),"\n",(0,s.jsx)(i.admonition,{type:"tip",children:(0,s.jsxs)(i.p,{children:["Source: ",(0,s.jsx)(i.a,{href:"https://github.com/lukeed/clsx?tab=readme-ov-file#tailwind-support",children:"clsx() Tailwind Support"})]})}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.a,{href:"https://github.com/lukeed/clsx",children:(0,s.jsx)(i.code,{children:"clsx()"})})," utility is useful for constructing ",(0,s.jsx)(i.code,{children:"className"})," strings conditionally."]}),"\n",(0,s.jsx)(i.p,{children:"Install it by using this command:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-terminal",children:"pnpm add --save clsx\n"})}),"\n",(0,s.jsxs)(i.p,{children:["Then add the following property to the ",(0,s.jsx)(i.code,{children:".vscode/settings.json"})," file. This will allow the Tailwind VS Code extension to continue working:"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-json",children:'{\n  "tailwindCSS.experimental.classRegex": [\n    ["clsx\\\\(([^)]*)\\\\)", "(?:\'|\\"|`)([^\']*)(?:\'|\\"|`)"]\n  ]\n}\n'})}),"\n",(0,s.jsx)(i.h2,{id:"official-prettier-plugin",children:"Official Prettier Plugin"}),"\n",(0,s.jsx)(i.admonition,{type:"info",children:(0,s.jsxs)(i.p,{children:["Source: ",(0,s.jsx)(i.a,{href:"https://www.npmjs.com/package/prettier-plugin-tailwindcss",children:(0,s.jsx)(i.code,{children:"prettier-plugin-tailwindcss"})})]})}),"\n",(0,s.jsxs)(i.p,{children:["Install ",(0,s.jsx)(i.code,{children:"prettier-plugin-tailwindcss"})," by using this command:"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-terminal",children:"pnpm add --save-dev --save-exact prettier-plugin-tailwindcss\n"})}),"\n",(0,s.jsxs)(i.p,{children:["Then add the plugin to the ",(0,s.jsx)(i.code,{children:".prettierrc"})," file:"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-json",children:'{\n  "plugins": ["\ud83d\udfe1...Other Plugins", "prettier-plugin-tailwindcss"],\n  "tailwindStylesheet": "{\ud83d\udfe1 PATH_TO_CSS_FILE_ENTRY_POINT_THAT_IMPORTS_TAILWIND}",\n  "tailwindFunctions": ["clsx"]\n}\n'})}),"\n",(0,s.jsx)(i.h2,{id:"unofficial-eslint-plugin",children:"Unofficial ESLint Plugin"}),"\n",(0,s.jsxs)(i.admonition,{type:"warning",children:[(0,s.jsx)(i.p,{children:"As of 04/08/2025"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"There is no official ESLint plugin released for Tailwind CSS."}),"\n",(0,s.jsxs)(i.li,{children:["There is the unofficial but decently popular ",(0,s.jsx)(i.a,{href:"https://www.npmjs.com/package/eslint-plugin-tailwindcss",children:(0,s.jsx)(i.code,{children:"eslint-plugin-tailwindcss"})}),". However it is NOT YET compatible with Tailwind v4.0"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"@eslint/css"})," has a language option for custom TailwindCSS syntax. However, it has not been updated for TailwindCSS 4.0. That section of the config might need to be commented out until the language option has been updated"]}),"\n"]})]}),"\n",(0,s.jsxs)(i.p,{children:["Install ",(0,s.jsx)(i.code,{children:"eslint-plugin-tailwindcss"})," by running this command:"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-terminal",children:"pnpm add --save-dev eslint-plugin-tailwindcss\n"})}),"\n",(0,s.jsxs)(i.p,{children:["Update the ",(0,s.jsx)(i.code,{children:"eslint.config.mjs"})," file with the following:"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-ts",children:'// ...\nimport { tailwindSyntax } from "@eslint/css/syntax";\nimport tailwind from "eslint-plugin-tailwindcss";\n\n// ...\n\nexport default defineConfig([\n  // ...\n   {\n    files: ["**/*.{js,jsx,ts,tsx,mjs,cjs,mts,cts}"],\n    extends: [\n      // ...\n      // TODO: Does this work yet for TailwindCSS v4.0?\n      tailwind.configs["flat/recommended"],\n    ],\n    rules: { ... },\n  },\n  // TODO: Does this work yet for TailwindCSS v4.0?\n  {\n    files: ["**/*.css"],\n    // ...\n    languageOptions: {\n      tolerant: true, // \ud83d\udfe1 This may be required due to custom syntax that TailwindCSS uses\n      customSyntax: tailwindSyntax, // \ud83d\udfe1 This has not been updated yet for TailwindCSS v4.0\n    },\n  },\n]);\n'})}),"\n",(0,s.jsx)(i.h2,{id:"project-documentation",children:"Project Documentation"}),"\n",(0,s.jsxs)(i.h3,{id:"update-98-vs-code02-vs-code-extensionsmd-documentation",children:["Update ",(0,s.jsx)(i.code,{children:"98-vs-code/02-vs-code-extensions.md"})," Documentation"]}),"\n",(0,s.jsxs)(i.p,{children:["Add the following to the ",(0,s.jsx)(i.code,{children:"docusaurus/docs/98-vs-code/02-vs-code-extensions.md"})," documentation"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-md",metastring:'title="docusaurus/docs/98-vs-code/02-vs-code-extensions.md"',children:"| [Tailwind CSS IntelliSense](https://marketplace.visualstudio.com/items?itemName=bradlc.vscode-tailwindcss) | Enhances the Tailwind development experience by providing Visual Studio Code users with advanced features such as autocomplete, syntax highlighting, and linting |\n"})}),"\n",(0,s.jsxs)(i.h3,{id:"create-03-libraries-tools01-tailwind-cssmd-documentation",children:["Create ",(0,s.jsx)(i.code,{children:"03-libraries-tools/01-tailwind-css.md"})," Documentation"]}),"\n",(0,s.jsx)(l.A,{language:"markdown",title:"docusaurus/docs/03-libraries-tools/01-tailwind-css.md",children:a}),"\n",(0,s.jsxs)(i.h3,{id:"create-03-libraries-tools02-theme-configurationmdx",children:["Create ",(0,s.jsx)(i.code,{children:"03-libraries-tools/02-theme-configuration.mdx"})]}),"\n",(0,s.jsx)(i.p,{children:"This is not as straightforward of a process as I would like, but I believe it is useful information for future devs to have to reference within the project."}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsxs)(i.li,{children:["Navigate to ",(0,s.jsx)(i.a,{href:"https://github.com/SamuelMaddox/samuelmaddox/tree/main/docs/dev-notes/04-library-tools/05-tailwind-css",children:"https://github.com/SamuelMaddox/samuelmaddox/tree/main/docs/dev-notes/04-library-tools/05-tailwind-css"})," and copy it's contents to the ",(0,s.jsx)(i.code,{children:"docusaurus/docs/03-libraries-tools/"})," directory."]}),"\n",(0,s.jsxs)(i.li,{children:["Delete the ",(0,s.jsx)(i.code,{children:"01-library-setup.mdx"})," file."]}),"\n",(0,s.jsxs)(i.li,{children:["In the ",(0,s.jsx)(i.code,{children:"02-theme-configuration.mdx"})," file, remove the ",(0,s.jsx)(i.code,{children:"NextJS Font Optimization"})," section if the project is not using NextJS."]}),"\n",(0,s.jsxs)(i.li,{children:["In the ",(0,s.jsx)(i.code,{children:"02-theme-configuration.mdx"})," file, locate the ",(0,s.jsx)(i.code,{children:"Theme Selector Component"})," section and remove the tabs and ",(0,s.jsx)(i.code,{children:"<ThemeSelector>"})," markdown partials that are not relevant to the project's framework."]}),"\n",(0,s.jsxs)(i.li,{children:["In the ",(0,s.jsx)(i.code,{children:"tailwind-css-partials"})," directory, delete ",(0,s.jsx)(i.code,{children:"_tailwind-css-project-docs.md"})," and ",(0,s.jsx)(i.code,{children:"theme-selector"})," partials for the frameworks that are not relevant to the project's framework."]}),"\n"]}),"\n",(0,s.jsxs)(i.h3,{id:"create-99-articlesmastering-design-system-colors-article",children:["Create ",(0,s.jsx)(i.code,{children:"99-articles/mastering-design-system-colors"})," Article"]}),"\n",(0,s.jsx)(i.admonition,{type:"note",children:(0,s.jsx)(i.p,{children:"I'm paranoid about broken links due to relevant articles being removed. Therefore, when I find an article that I think is relevant to a project, I like to save a copy of that article within the project's documentation."})}),"\n",(0,s.jsx)(i.admonition,{type:"info",children:(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.code,{children:"03-libraries-tools/02-theme-configuration.mdx"})," documentation links to the following article"]})}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsxs)(i.li,{children:["Create a ",(0,s.jsx)(i.code,{children:"docusaurus/docs/99-articles/mastering-design-system-colors"})," directory."]}),"\n",(0,s.jsxs)(i.li,{children:["Copy the ",(0,s.jsx)(i.a,{href:"https://github.com/SamuelMaddox/samuelmaddox/tree/main/docs/articles/mastering-design-system-colors",children:"Mastering Design System Colors"})," article contents into the above directory."]}),"\n",(0,s.jsxs)(i.li,{children:["Update the ",(0,s.jsx)(i.code,{children:"Mastering Design System Colors"})," link in ",(0,s.jsx)(i.code,{children:"03-libraries-tools/02-theme-configuration.mdx"})," to point to the new location."]}),"\n"]})]})}function u(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}}}]);