"use strict";(self.webpackChunkdeveloper_notes=self.webpackChunkdeveloper_notes||[]).push([[81],{3004:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"dev-notes/library-tools/pre-commit-hooks","title":"Pre-Commit Hooks","description":"Install Husky","source":"@site/docs/dev-notes/04-library-tools/03-pre-commit-hooks.md","sourceDirName":"dev-notes/04-library-tools","slug":"/dev-notes/library-tools/pre-commit-hooks","permalink":"/dev-notes/library-tools/pre-commit-hooks","draft":false,"unlisted":false,"editUrl":"https://github.com/samuelmaddox/samuelmaddox/blob/main/docs/dev-notes/04-library-tools/03-pre-commit-hooks.md","tags":[],"version":"current","lastUpdatedAt":1749129615000,"sidebarPosition":3,"frontMatter":{},"sidebar":"devNotesSidebar","previous":{"title":"Prettier","permalink":"/dev-notes/library-tools/prettier"},"next":{"title":"\ud83d\udea7 Playwright","permalink":"/dev-notes/library-tools/playwright"}}');var s=n(3420),o=n(3774);const r={},a="Pre-Commit Hooks",c={},l=[{value:"Install Husky",id:"install-husky",level:2},{value:"Install Lint-Staged",id:"install-lint-staged",level:2},{value:"Configure",id:"configure",level:2},{value:"Project Documentation",id:"project-documentation",level:2},{value:"Update <code>01-scripts.md</code> Documentation",id:"update-01-scriptsmd-documentation",level:3},{value:"Create <code>04-ci-cd/01-pre-commit hooks</code> Documentation",id:"create-04-ci-cd01-pre-commit-hooks-documentation",level:3}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"pre-commit-hooks",children:"Pre-Commit Hooks"})}),"\n",(0,s.jsx)(t.h2,{id:"install-husky",children:"Install Husky"}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsxs)(t.p,{children:["Review the ",(0,s.jsx)(t.a,{href:"https://typicode.github.io/husky/get-started.html",children:"Official Husky Installation Instructions"})," for changes."]})}),"\n",(0,s.jsx)(t.p,{children:"Install husky using the following command:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-terminal",children:"pnpm add --save-dev husky\n"})}),"\n",(0,s.jsx)(t.p,{children:"Then initialize husky:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-terminal",children:"pnpx husky init\n"})}),"\n",(0,s.jsx)(t.h2,{id:"install-lint-staged",children:"Install Lint-Staged"}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsxs)(t.p,{children:["Review the ",(0,s.jsx)(t.a,{href:"https://github.com/lint-staged/lint-staged",children:"Official Lint-Staged Installation README.md"})," for changes."]})}),"\n",(0,s.jsx)(t.p,{children:"Install lint-staged using the following command:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-terminal",children:"pnpm add --save-dev lint-staged\n"})}),"\n",(0,s.jsx)(t.h2,{id:"configure",children:"Configure"}),"\n",(0,s.jsxs)(t.p,{children:["Add a ",(0,s.jsx)(t.code,{children:".lintstagedrc.json"})," file and add the following:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",metastring:'title=".lintstagedrc.json"',children:'{\n  "*": ["pnpm prettier"]\n}\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Modify the ",(0,s.jsx)(t.code,{children:".husky/pre-commit"})," file to the following:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-txt",metastring:'title=".husky/pre-commit"',children:"pnpm lint\npnpx lint-staged\n"})}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsxs)(t.p,{children:["Consider adding a ",(0,s.jsx)(t.code,{children:"tsc"})," script to husky if it's not included in the build script:"]})}),"\n",(0,s.jsx)(t.h2,{id:"project-documentation",children:"Project Documentation"}),"\n",(0,s.jsxs)(t.h3,{id:"update-01-scriptsmd-documentation",children:["Update ",(0,s.jsx)(t.code,{children:"01-scripts.md"})," Documentation"]}),"\n",(0,s.jsxs)(t.p,{children:["Add the following to the ",(0,s.jsx)(t.code,{children:"docusaurus/docs/01-scripts.md"})," documentation"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-md",metastring:'title="docusaurus/docs/01-scripts.md"',children:"| `pnpm run prepare` | This script runs automatically after you install dependencies. It triggers Husky\u2019s installation process, which sets up Git hooks locally.|\n"})}),"\n",(0,s.jsxs)(t.h3,{id:"create-04-ci-cd01-pre-commit-hooks-documentation",children:["Create ",(0,s.jsx)(t.code,{children:"04-ci-cd/01-pre-commit hooks"})," Documentation"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-markdown",metastring:'title="docusaurus/docs/04-ci-cd/01-pre-commit hooks"',children:'# Pre-Commit Hooks\n\n:::warning\nCommitting can seem to take a while if using the Git GUI in VS Code. This is because pre-commit hooks are running in the background before the commit is executed. If you\'re committing in the terminal you\'ll see the pre-commit hooks running.\n:::\n\n## About Pre-Commit Hooks\n\nA **pre-commit** hook is a script that runs automatically before a commit is finalized in Git. It\u2019s used to catch issues early (like lint errors or formatting problems) by running checks or commands before code is committed. If the script fails, the commit is blocked.\n\n## About Husky\n\n:::info\n[Official Husky Installation Instructions](https://typicode.github.io/husky/get-started.html)\n:::\n\n**Husky** is a tool that makes it easy to manage Git hooks (like pre-commit) in JavaScript projects. It lets you define scripts that run at various points in the Git workflow (e.g., before commits, before pushes) by placing executable files in the `.husky` directory.\n\nThe `"prepare": "husky"` script in your `package.json` ensures Husky is set up after every install; which in turns ensures git hooks are configured for you locally on your machine.\n\n## About Lint-Staged\n\n:::info\n[Official Lint-Staged Installation README.md](https://github.com/lint-staged/lint-staged)\n:::\n\n**lint-staged** is a tool that runs scripts only on files that are staged for commit. This makes pre-commit checks fast and efficient, since only changed files are checked, not the whole codebase. Most useful for auto formatting staged files. Husky can run a prettier script, but will NOT re-stage files that have been formatted before committing.\n\n## Configure Git Hooks\n\n- The `.husky/pre-commit` file contains the scripts to run before commit, including `lint-staged`.\n- The `lintstagedrc.json` file describes what scripts to run for what glob patterns.\n\n## Bypassing Pre-Commit Hooks\n\nyou can bypass `pre-commit` hooks using the `--no-verify` option. Example:\n\n```shell\n`git commit -m "yolo" --no-verify`\n```\n'})})]})}function m(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},3774:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var i=n(6672);const s={},o=i.createContext(s);function r(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);